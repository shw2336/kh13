/*
    KH정보교육원 당산지원 C강의장 수업자료

    만든이 - 피카츄
    만든날짜 - 2024.02.07
*/
@charset "UTF-8";

/* 전체 선택자 - 모든 태그에 설정(전체 규칙) */
* {
    box-sizing: border-box;
    font-family: 빙그레 메로나체, sans-serif;
}

/* 
    컨테이너(.container)
    - 가장 작은 화면의 단위
    - 내부에는 반드시 한 줄에 하나씩 도구들이 배치된다
    - 컨테이너는 가운데 배치되도록 구현
*/
.container {
    margin-left: auto;
    margin-right: auto;
}

/*
    셀(.cell)
    - 컨테이너의 내부에 배치되는 한 줄
    - 셀과 셀 사이에는 일정 크기의 여백이 필요
*/
.cell {
    margin-top: 10px;
    margin-bottom: 10px;
}

/*
    폭 스타일
    - 컨테이너와 컴포넌트 등 다양한 상황에 쓸 수 있는 폭을 미리 정의
    - 최저 200px부터 최고 1200px까지 50px단위로 제작
    - 100 이하의 숫자는 %로 인식하도록 구현
*/
.w-200 { width: 200px; }
.w-250 { width: 250px; }
.w-300 { width: 300px; }
.w-350 { width: 350px; }
.w-400 { width: 400px; }
.w-450 { width: 450px; }
.w-500 { width: 500px; }
.w-550 { width: 550px; }
.w-600 { width: 600px; }
.w-650 { width: 650px; }
.w-700 { width: 700px; }
.w-750 { width: 750px; }
.w-800 { width: 800px; }
.w-850 { width: 850px; }
.w-900 { width: 900px; }
.w-950 { width: 950px; }
.w-1000 { width: 1000px; }
.w-1050 { width: 1050px; }
.w-1100 { width: 1100px; }
.w-1150 { width: 1150px; }
.w-1200 { width: 1200px; }

.w-100 { width:100%; }
.w-75 { width:75%; }
.w-50 { width:50%; }
.w-33 { width:33.3333%; }
.w-25 { width:25%; }

/*
    입력창과 버튼 스타일
    - 입력창 - .tool
    - 버튼 - .btn
*/
.tool , .btn {
    font-size: 20px;
    padding: 0.5em 1em;
    outline: none;/*선택시 자동강조효과 제거*/
    border: 1px solid #636e72;
    border-radius: 0.1em;
}

/* 입력창은 focus 효과가 발생할 때 테두리를 강조 */
.tool:focus {
    border-color: #2d3436;
}

/* 밑줄만 있는 입력창 구현 .tool.underline*/
.tool.underline {
    border-left: none;
    border-right: none;
    border-top: none;
    padding-left: 0;
    padding-right: 0;
}

/* 이미지가 들어갈 수 있는 입력창 */
.tool.tool-image {
    padding-left: 2.25em;
    background-size: 1em;
    background-repeat: no-repeat;
    background-position-x: 0.625em;
    /* background-position-y: 50%; */
    background-position-y: center;
}

/*
    textarea도 입력도구이므로 .tool을 사용한다
    textarea의 최대 문제점은 가로로 크기조절이 가능한 것이므로 이를 제어
    resize 속성으로 설정
    - `resize : none` 으로 설정하면 크기 조절이 불가능
    - `resize : vertical`로 설정하면 세로 크기 조절만 가능
*/
textarea.tool {
    resize: vertical;
    min-height: 5em; /* 필요 시 개조 */
}
textarea.tool.tool-fixed {
    resize: none;
}

/*
    버튼은 크게 세 가지 용도로 구분한다
    1. 긍정버튼 - 누르면 긍정적인 작업이 발생하는 경우(순리대로 흘러가는 경우)
    2. 부정버튼 - 누르면 작업이 중단되거나 위험한 일이 발생하는 경우
    3. 중립버튼 - 긍정도 부정도 아닌 제 3의 작업이 발생하는 경우

    그냥 .btn은 중립버튼으로 처리한다
    긍정버튼은 .btn 뒤에 .positive 추가
    부정버튼은 .btn 뒤에 .negative 추가

    마우스가 버튼에 올라가면(hover) 강조 효과 부여
*/

.btn {/* a태그를 버튼으로 쓸 경우 */
    color: #2d3436;
    text-decoration: none; /* 밑줄 제거 */
    display: inline-block;
    text-align: center;
    cursor: pointer;
    border: none;
}

.btn.positive {
    background-color: #00b894;
    color: white;
}
.btn.negative {
    background-color: #d63031;
    color: white;
}

/* 버튼에 마우스가 올라가면 색상의 변화를 주겠다 */
.btn:hover {
    filter: brightness(0.9);
}


/*
    정렬 스타일
    - .left를 붙이면 왼쪽 정렬
    - .center를 붙이면 가운데 정렬
    - .right를 붙이면 오른쪽 정렬
    - 우선순위에서 밀리지 않기 위해 !important 처리를 해야함
*/
.left { text-align: left !important; }
.center { text-align: center !important; }
.right { text-align: right !important; }

/*
    여백 스타일(spacing)
    - class를 이용하여 margin과 padding을 부여할 수 있도록 구현
    - 10px 단위로 설정할 수 있도록 구현
    - 범위는 0~50까지
    - 여백의 방향을 지정할 수 있도록 구현
        - `mt-10`이라고 작성할 경우 `margin-top : 10px`로 처리
        - `m-20`이라고 작성할 경우 `margin: 20px`로 처리
        - `pb-20`이라고 작성할 경우 `padding-bottom: 20px`로 처리
        - `ms-20`라고 작성할 경우 `margin-left:20px`로 처리
*/

.m-0 { margin: 0px; }
.m-10 { margin: 10px; }
.m-20 { margin: 20px; }
.m-30 { margin: 30px; }
.m-40 { margin: 40px; }
.m-50 { margin: 50px; }

.mt-0 { margin-top: 0px; }
.mt-10 { margin-top: 10px; }
.mt-20 { margin-top: 20px; }
.mt-30 { margin-top: 30px; }
.mt-40 { margin-top: 40px; }
.mt-50 { margin-top: 50px; }

.mb-0 { margin-bottom: 0px; }
.mb-10 { margin-bottom: 10px; }
.mb-20 { margin-bottom: 20px; }
.mb-30 { margin-bottom: 30px; }
.mb-40 { margin-bottom: 40px; }
.mb-50 { margin-bottom: 50px; }

.ms-0 { margin-left: 0px; }
.ms-10 { margin-left: 10px; }
.ms-20 { margin-left: 20px; }
.ms-30 { margin-left: 30px; }
.ms-40 { margin-left: 40px; }
.ms-50 { margin-left: 50px; }

.me-0 { margin-right: 0px; }
.me-10 { margin-right: 10px; }
.me-20 { margin-right: 20px; }
.me-30 { margin-right: 30px; }
.me-40 { margin-right: 40px; }
.me-50 { margin-right: 50px; }

.mx-0 { margin-left:0px; margin-right: 0px; }
.mx-10 { margin-left:10px; margin-right: 10px; }
.mx-20 { margin-left:20px; margin-right: 20px; }
.mx-30 { margin-left:30px; margin-right: 30px; }
.mx-40 { margin-left:40px; margin-right: 40px; }
.mx-50 { margin-left:50px; margin-right: 50px; }

.my-0 { margin-top:0px; margin-bottom: 0px; }
.my-10 { margin-top:10px; margin-bottom: 10px; }
.my-20 { margin-top:20px; margin-bottom: 20px; }
.my-30 { margin-top:30px; margin-bottom: 30px; }
.my-40 { margin-top:40px; margin-bottom: 40px; }
.my-50 { margin-top:50px; margin-bottom: 50px; }


.p-0 { padding: 0px; }
.p-10 { padding: 10px; }
.p-20 { padding: 20px; }
.p-30 { padding: 30px; }
.p-40 { padding: 40px; }
.p-50 { padding: 50px; }

.pt-0 { padding-top: 0px; }
.pt-10 { padding-top: 10px; }
.pt-20 { padding-top: 20px; }
.pt-30 { padding-top: 30px; }
.pt-40 { padding-top: 40px; }
.pt-50 { padding-top: 50px; }

.pb-0 { padding-bottom: 0px; }
.pb-10 { padding-bottom: 10px; }
.pb-20 { padding-bottom: 20px; }
.pb-30 { padding-bottom: 30px; }
.pb-40 { padding-bottom: 40px; }
.pb-50 { padding-bottom: 50px; }

.ps-0 { padding-left: 0px; }
.ps-10 { padding-left: 10px; }
.ps-20 { padding-left: 20px; }
.ps-30 { padding-left: 30px; }
.ps-40 { padding-left: 40px; }
.ps-50 { padding-left: 50px; }

.pe-0 { padding-right: 0px; }
.pe-10 { padding-right: 10px; }
.pe-20 { padding-right: 20px; }
.pe-30 { padding-right: 30px; }
.pe-40 { padding-right: 40px; }
.pe-50 { padding-right: 50px; }

.px-0 { padding-left:0px; padding-right: 0px; }
.px-10 { padding-left:10px; padding-right: 10px; }
.px-20 { padding-left:20px; padding-right: 20px; }
.px-30 { padding-left:30px; padding-right: 30px; }
.px-40 { padding-left:40px; padding-right: 40px; }
.px-50 { padding-left:50px; padding-right: 50px; }

.py-0 { padding-top:0px; padding-bottom: 0px; }
.py-10 { padding-top:10px; padding-bottom: 10px; }
.py-20 { padding-top:20px; padding-bottom: 20px; }
.py-30 { padding-top:30px; padding-bottom: 30px; }
.py-40 { padding-top:40px; padding-bottom: 40px; }
.py-50 { padding-top:50px; padding-bottom: 50px; }


/*
    테이블 디자인
    - table이라는 클래스가 붙는 경우만 디자인하도록 설계
    - table은 전체와 칸에 테두리가 따로 적용된다(나눠져있다, seperate)
*/
.table {
    border-collapse: collapse;
    border-spacing: 0px;
    width: 100%;
}

/*
    .table 안에 있는 td와 th에만 디자인을 적용하는 방법
    (1) 후손 선택자
        - .table th 라고 작성하면 .table 안에있는 모든 th를 선택
        - .table td 라고 작성하면 .table 안에 있는 모든 td를 선택
        - 작성이 편하지만 테이블이 중첩되면 문제가 생김(범용성↓)
    (2) 자식 선택자
        - .table > tbody > tr > td 라고 작성하면 순서대로 따라가서 나오는 td를 선택
        - 작성이 까다롭지만 정확한 대상을 지정할 수 있음(범용성↑)
*/
.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td
{
    text-align: center;
    padding: 0.25em;
}

/*
    테이블 확장 스타일 - 테두리가 있는 테이블
*/
.table.table-border > thead > tr > th, 
.table.table-border > thead > tr > td, 
.table.table-border > tbody > tr > th, 
.table.table-border > tbody > tr > td, 
.table.table-border > tfoot > tr > th, 
.table.table-border > tfoot > tr > td 
{
    border:1px solid #2d3436;
}

/*
    테이블 확장 스타일 - 줄무늬 테이블
    - 제목줄에 배경을 설정하고 내용은 짝수줄만 배경 설정
    - 제목줄에 배경을 설정하지 않고 내용은 홀수줄만 배경 설정
*/
.table.table-stripe > thead > tr,
.table.table-stripe > tbody > tr:nth-child(2n) 
{
    background-color: #b2bec3;
}

/*
    테이블 확장 스타일 - 마우스 반응 테이블
    - 제목은 제외한 내용 줄만 마우스가 올라가면 색상이 변하도록 구현
*/
.table.table-hover > tbody > tr:hover {
    background-color: #b2bec3;
}

/*
    테이블 확장 스타일 - 가로줄무늬 테이블
*/
.table.table-horizontal {
    border-top: 1px solid #2d3436;
    border-bottom: 1px solid #2d3436;
}
.table.table-horizontal > thead {
    border-bottom: 1px solid #2d3436;
}
.table.table-horizontal > tfoot
{
    border-top: 1px solid #2d3436;
}
/* :not() 을 이용하여 특정 대상을 선택에서 제거할 수 있다 */
.table.table-horizontal > tbody > tr:not(tr:last-child) {
    border-bottom: 1px solid #b2bec3;
}

/*
    링크 디자인
    - class="link"인 경우 디자인을 설정
    - 방문한 경우의 색상은 :visitied 상태에 대해서 디자인을 하면 된다
*/
.link {
    text-decoration: none;
    color: #2d3436;
    display: inline-block;
}
.link:hover {
    color: #0984e3;
}

.link.link-animation {
    /* 
        transition을 통해 특정 속성의 변화 속도를 지정 
        - transition : 적용항목 변화시간 변화방식;
        - 변화방식은 크게 세 가지로 구분
            - linear : 변화속도가 일정한 것
            - ease-in, ease-out, ease-in-out은 시작과 끝을 부드럽게
                - ease-in은 시작을 부드럽게
                - ease-out은 끝을 부드럽게
                - ease-in-out은 시작과 끝을 모두 부드럽게
    */
    /* transition: transform 0.2s ease-out; */
    transition-property: transform, color;
    transition-duration: 0.2s;
    transition-timing-function: ease-out;
}
.link.link-animation:hover {
    /* 
        애니메이션 효과 추가
        - display:inline 에서는 불가능
        - transform 속성을 통해 원하는 작업을 부여
        - transition 속성을 통해 움직임 정도를 구현
    */
    transform: scale(1.05);
}

/*
    페이지 네비게이터 디자인
    - .page-navigator 안에 있는 a태그에 대하여 디자인
*/
.page-navigator {
    text-align: center;
    font-size: 16px;
}
.page-navigator.page-navigator-small {
    font-size: 12px;
}
.page-navigator.page-navigator-large {
    font-size: 20px;
}

.page-navigator > a {
    display: inline-block;
    color: #2d3436;
    text-decoration: none;
/*     border: 1px solid #2d3436; */
	border: 1px solid transparent;
    padding: 0.5em;
    font-size: inherit;
    min-width: 2.5em;
}

/*
    현재 페이지에 해당하는 번호에는 활성화 클래스인 on을 추가한다
    단, off인 경우는 hover에서 제외한다
*/
.page-navigator > a.on ,
.page-navigator > a:not(.off):hover
{
    color: #0984e3;
    border-color: #0984e3;
}

/* off 클래스에 대한 효과 추가 */
.page-navigator > a.off {
	color: #b2bec3;
	cursor: not-allowed;
}